# -*- coding: utf-8 -*-
"""기초적인 통계 계산하기_class101_데이터마이닝.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/146Y8s8LJhk2XT6tTSLSo1VufxoUDU_QK

# 시리즈 함수 다루기
"""

import pandas as pd

df = pd.read_csv("gapminder.tsv", sep = '\t')
df

year = df['year']
continent = df['continent']

year

continent

"""# 평균"""

year.mean()

"""# 중앙값"""

year.median()

"""# 최대값"""

year.max()

"""# 최소값"""

year.min()

"""# 표준편차"""

year.std()    # 표준편차: standard deviation

"""# 시리즈 연결하기"""

year.append(continent)

"""# 시리즈 요약 통계량 확인하기"""

year.describe()

df.describe()      # 숫자로 이루어진 열들의 요약 통계량

"""# 중복값 삭제하기"""

year.drop_duplicates()

df.drop_duplicates()    # 완전히 일치하는 행 제거

"""# 특정 값 바꾸기"""

b = pd.Series(['Mon', 'Fri', 'Thu', 'Sun'])
b.replace('Mon', 'Monday')

"""# 랜덤으로 샘플 추출하기"""

year.sample(10)    #  .sample(): 입력한 값 만큼 시리즈에서 랜덤으로 값을 추출하는 함수

"""# 정렬하기"""

year.sort_values()   # 오름차순 정렬

year.sort_values(ascending = False)    # 내림차순 정렬

"""# 시리즈 데이터 프레임으로 변환하기"""

year.to_frame()

df.sort_values(by = "lifeExp")

df.sort_values(by = "lifeExp", ascending = False)

"""# gapminder 데이터 프레임에서 gdpPercap열을 내림차순으로 정렬하고 인증하기"""

df.sort_values(by = "gdpPercap", ascending = False)

